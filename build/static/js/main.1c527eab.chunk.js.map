{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loard.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","app.tsx","index.tsx"],"names":["formatDate","date","arguments","length","undefined","Date","concat","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","_ref","pokemon","borderColor","setColor","useState","navigate","useNavigate","_jsx","className","onClick","goToPokemon","id","onMouseEnter","showBorder","onMouseLeave","hideBorder","children","_jsxs","style","src","picture","alt","name","created","types","map","POKEMONS","hp","cp","PokemonService","static","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","push","term","includes","Object","keys","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","Link","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","useParams","setPokemon","getPokemon","Number","width","margin","PageNotFound","PokemonForm","isEditForm","form","setForm","isValid","hasType","newField","isTypesValid","handleSubmit","preventDefault","validateForm","newForm","isAddForm","start","end","startsWith","endsWith","errorMsg","test","updatePokemon","addPokemon","async","onSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","selectType","currentType","PokemonEdit","Pokemon","constructor","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","redirectPath","Outlet","Navigate","replace","App","Router","Routes","Route","path","element","PokemonPost","PokemonDetail","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c527eab.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\n    return `${date.getDate()}/${date.getMonth()+ 1}/${date.getFullYear()}`\n}\nexport default formatDate","const formatType = (type: string): string => {\n    let color: string;\n   \n    switch (type) {\n      case 'Feu': \n        color = 'red lighten-1'; \n        break; \n      case 'Eau': \n        color = 'blue lighten-1'; \n        break; \n      case 'Plante': \n        color = 'green lighten-1'; \n        break; \n      case 'Insecte': \n        color = 'brown lighten-1'; \n        break; \n      case 'Normal': \n        color = 'grey lighten-3'; \n        break; \n      case 'Vol': \n        color = 'blue lighten-3'; \n        break; \n      case 'Poison': \n        color = 'deep-purple accent-1'; \n        break; \n      case 'Fée': \n        color = 'pink lighten-4'; \n        break; \n      case 'Psy': \n        color = 'deep-purple darken-2'; \n        break; \n      case 'Electrik': \n        color = 'lime accent-1'; \n        break; \n      case 'Combat': \n        color = 'deep-orange'; \n        break; \n      default: \n        color = 'grey'; \n        break; \n    }\n   \n    return `chip ${color}`;\n  }\n\n  export default formatType","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css'\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useNavigate } from 'react-router-dom';\n  \ntype Props = {\n  pokemon: Pokemon,\n  borderColor?: string\n};\n  \nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\n   \n  const [color, setColor] = useState<string>();\n  const navigate = useNavigate();\n   \n   const showBorder = () => {\n    setColor(borderColor)\n   }\n\n   const hideBorder = () => {\n    setColor('#f5f5f5') // Bordure de nouveau en grise\n   }\n\n   const goToPokemon = (id: number) => {\n    navigate(`/pokemons/${id}`);\n   }\n\n  return (\n    <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\n        <div className=\"card-image\"> \n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p><small>{formatDate(pokemon.created)}</small></p>\n            {pokemon.types.map(type => (\n              <span key={type} className={formatType(type)}>{type}</span>\n            ))}\n          </div>\n        </div>\n      </div> \n    </div>\n  );\n}\n  \n\n\nexport default PokemonCard","import Pokemon from './pokemon';\n   \nexport const POKEMONS: Pokemon[] = [\n {\n  id: 1,\n  name: \"Bulbizarre\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n  \nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n\nexport default class PokemonService {\n\n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon|undefined> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    }); \n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    delete pokemon.created;\n\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n \nconst PokemonSearch: FunctionComponent = () => {\n  \n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n \n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n \n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n  \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n  \nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service' \nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\n\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  \n  useEffect(() => {\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons))\n  }, []);\n  \n  return (\n    <div>\n   \n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\"> \n        <div className=\"row\">  \n          <PokemonSearch/>\n        {pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.id} pokemon={pokemon} />\n        ))}\n        </div>\n        <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\n         style={{position: 'fixed' , bottom: '25px' , right: '25px'}} to=\"/pokemon/post\"><i className=\"fa fa-plus\"></i></Link>\n      </div>\n    </div> \n  );\n}\n  \nexport default PokemonList;","import React, { FunctionComponent } from 'react';\n  \nconst Loader: FunctionComponent = () => {\n   \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n   \nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loard';\n\nconst PokemonsDetail: FunctionComponent = () => {\n  const {id} = useParams() // cet id est reçu sous forme d'une chaîne de caractères.\n  const [pokemon, setPokemon] = useState<Pokemon|undefined>();\n      \n  useEffect(() => {\n      PokemonService.getPokemon(Number(id)).then(pokemon => setPokemon(pokemon || undefined));\n      }, [id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <Link to={`/pokemon/edit/${pokemon.id}`} className='btn btn-floating halfway-fab waves-effect waves-light'>\n              <i className=\"fa-solid fa-pen\"></i>\n              </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created)}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n  \nconst PageNotFound: FunctionComponent = () => {\n  \n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n  \nexport default PageNotFound;","import React, { FunctionComponent, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n \n\ntype Props = { \n  pokemon: Pokemon,\n  isEditForm: boolean;\n};\n\ntype Field = {\n    value?: any,\n    error?: string,\n    isValid?: boolean;\n}\n\ntype Form = {\n    picture: Field,\n    name: Field,\n    hp: Field,\n    cp: Field,\n    types: Field\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n  \n    const navigate = useNavigate();\n\n    const [form, setForm] = useState<Form>({\n        picture: { value: pokemon.picture, isValid:true },\n        name: { value: pokemon.name, isValid: true },\n        hp: { value: pokemon.hp, isValid: true },\n        cp: { value: pokemon.cp, isValid: true },\n        types: { value: pokemon.types, isValid: true }\n    });\n\n\n    const types: string[] = [\n        'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n        'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n    ];\n\n\n    const hasType = (type: string): boolean =>{\n    return form.types.value.includes(type);\n    }\n\n    const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked;\n    let newField: Field;\n\n    if(checked) {\n      // Si l'utilisateur coche un type, on l'ajoute à la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n    }\n\n    setForm({...form, ...{ types: newField }});\n  }\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue} };\n\n    setForm({...form, ...newField});\n}\n\n\nconst validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator url\n    if(isAddForm()) {\n\n        const start = \"https://assets.pokemon.com//cms2/img/pokedex/detail/\";\n        const end = \".png\";\n  \n        if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n          const errorMsg: string = 'L\\'url n\\'est pas valide.';\n          const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n          newForm = { ...newForm, ...{ picture: newField } };\n        } else {\n          const newField: Field = { value: form.picture.value, error: '', isValid: true };\n          newForm = { ...newForm, ...{ picture: newField } };\n        }\n      }\n    \n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  }\n\n\n \n  const isTypesValid = (type: string): boolean => {\n    if(form.types.value.length === 1 && hasType(type)) {\n       return false;  \n    }\n   \n    if(form.types.value.length >= 3 && !hasType(type)){\n        return false;\n    }\n    return true;\n  }\n\n \n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n   const isFormValid = validateForm();\n\n   if(isFormValid){\n    pokemon.name = form.name.value;\n    pokemon.hp = form.hp.value;\n    pokemon.cp = form.cp.value;\n    pokemon.types = form.types.value;\n    pokemon.picture = form.picture.value;\n    isEditForm ? updatePokemon() : addPokemon();\n  }\n  }\n \n  const addPokemon = async () => {\n    const newPokemon = await PokemonService.addPokemon(pokemon);\n    return newPokemon;\n  }\n\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => navigate(`/pokemons/${pokemon.id}`))\n}\n\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => navigate(`/pokemons`))\n  }\n\n  const isAddForm = (): boolean => {\n    return !isEditForm;\n  }\n\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}> \n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n          {isEditForm && (\n             <div className=\"card-image\">\n             <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n             <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n               <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n             </span>\n           </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                {isAddForm() &&(\n                     <div className=\"form-group\">\n                  <label htmlFor=\"name\">Image</label>\n                  <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                {form.picture.error &&\n                <div className=\"card-pannel red accent-1\">\n                    {form.picture.error}\n                </div>\n                }\n                </div> \n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                {form.name.error &&\n                <div className=\"card-pannel red accent-1\">\n                    {form.name.error}\n                </div>\n                }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.hp.error &&\n                <div className=\"card-pannel red accent-1\">\n                    {form.hp.error}\n                </div>\n                }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.cp.error &&\n                <div className=\"card-pannel red accent-1\">\n                    {form.cp.error}\n                </div>\n                }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value= {type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loard';\n \nconst PokemonEdit: FunctionComponent = () => {\n  const {id} = useParams() // cet id est reçu sous forme d'une chaîne de caractères.\n  const [pokemon, setPokemon] = useState<Pokemon|undefined>();\n      \n  useEffect(() => {\n      PokemonService.getPokemon(Number(id)).then(pokemon => setPokemon(pokemon || undefined));\n      }, [id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","export default class Pokemon {\n    id: number;\n    hp: number;\n    cp: number;\n    name: string;\n    picture: string;\n    types: Array<string>;\n    created: Date;\n    \n    constructor(\n     id: number,\n     hp: number = 100,\n     cp: number = 10,\n     name: string = '...',\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\n     types: Array<string> = ['Normal'],\n     created: Date = new Date()\n    ) {\n     this.id = id;\n     this.hp = hp;\n     this.cp = cp;\n     this.name = name;\n     this.picture = picture;\n     this.types = types;\n     this.created = created;\n    }\n   }","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\n\n\nconst PokemonAdd: FunctionComponent = () => {\n    const [id] = useState<number>(new Date().getTime());\n    const [pokemon] = useState<Pokemon>(new Pokemon(id));\n\n    return (\n        <div className='\"row'>\n            <h2 className='header center'>Ajouter un pokémon</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n        </div>\n    )\n}\n\nexport default PokemonAdd;","export default class AuthenticationService {\n\n    static isAuthenticated:boolean = false;\n  \n    static login(username: string, password: string): Promise<boolean> {\n      const isAuthenticated = (username === 'Pokemon' && password === 'Pokedex');\n  \n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.isAuthenticated = isAuthenticated;\n          resolve(isAuthenticated);\n        }, 1000);\n      });\n    }\n  }","import React, { FunctionComponent, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const navigate = useNavigate();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (Pokemon / Pokedex)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        navigate('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n\nconst PrivateRoute= ({ redirectPath = '/login' }) => {\n  if (!AuthenticationService.isAuthenticated) {\n    return <Navigate to={redirectPath} replace />;\n  }\n  return <Outlet />;\n};\n\nexport default PrivateRoute;","import React, { FunctionComponent } from 'react';\nimport PokemonList from './pages/pokemon-list';\nimport PokemonDetail from './pages/pokemon-detail';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PokemonPost from './pages/pokemon-add';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\n\n\nconst App: FunctionComponent = () => {\n\n\n return (\n  <Router>\n    <div>\n      {/*La barre de navigation commun à toutes les pages*/}\n      <nav>\n        <div className=\"nav-wraper teal\">\n          <Link to=\"/\" className=\"brand-logo center\">Pokédex</Link>\n        </div>\n      </nav>\n      {/*Le système de gestion des routes de notre applicaton*/}\n      <Routes>\n       \n        <Route path =\"/login\" element={<Login />} />\n        <Route element={<PrivateRoute/>} > \n        <Route  path=\"/\" element={<PokemonList />} />\n        <Route  path=\"/pokemons\" element={<PokemonList />} />\n        <Route  path=\"/pokemon/post\" element={<PokemonPost />} />\n        <Route  path=\"/pokemon/edit/:id\" element={<PokemonEdit />} />\n        <Route path=\"/pokemons/:id\" element={<PokemonDetail/>} />\n        </Route>\n        <Route element={<PageNotFound />} />\n      </Routes>\n    </div>\n  </Router>\n  \n )\n}\n  \nexport default App;","import React from 'react';\nimport ReactDOM  from 'react-dom';\nimport App from './app'\n\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n    \n)"],"sourceRoot":""}