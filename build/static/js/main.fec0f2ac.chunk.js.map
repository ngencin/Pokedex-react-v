{"version":3,"sources":["helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","helpers/format-date.ts","components/loard.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","images/Pokedex-logo-app.png","pages/header.tsx","images/logoniadmegencingroovy.png","pages/footer.tsx","app.tsx","index.tsx"],"names":["formatType","type","color","concat","PokemonCard","_ref","pokemon","borderColor","setColor","useState","navigate","useNavigate","_jsx","className","onClick","goToPokemon","id","onMouseEnter","showBorder","onMouseLeave","hideBorder","children","_jsxs","style","src","picture","alt","name","types","map","POKEMONS","hp","cp","created","Date","PokemonService","static","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","push","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","Link","to","PokemonList","useEffect","getPokemons","position","bottom","right","formatDate","date","arguments","undefined","getDate","getMonth","getFullYear","Loader","PokemonsDetail","useParams","setPokemon","getPokemon","Number","width","margin","PageNotFound","PokemonForm","isEditForm","form","setForm","isValid","hasType","newField","isTypesValid","handleSubmit","preventDefault","validateForm","newForm","isAddForm","start","end","startsWith","endsWith","errorMsg","test","updatePokemon","addPokemon","async","onSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","selectType","currentType","PokemonEdit","Pokemon","constructor","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","redirectPath","Outlet","Navigate","replace","Header","href","rel","LogoApp","Footer","LogoAppFooter","App","Router","Routes","Route","path","element","PokemonPost","PokemonDetail","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.fec0f2ac.chunk.js","sourcesContent":["const formatType = (type: string): string => {\n    let color: string;\n   \n    switch (type) {\n      case 'Feu': \n        color = 'red lighten-1'; \n        break; \n      case 'Eau': \n        color = 'blue lighten-1'; \n        break; \n      case 'Plante': \n        color = 'green lighten-1'; \n        break; \n      case 'Insecte': \n        color = 'brown lighten-1'; \n        break; \n      case 'Normal': \n        color = 'grey lighten-3'; \n        break; \n      case 'Vol': \n        color = 'blue lighten-3'; \n        break; \n      case 'Poison': \n        color = 'deep-purple accent-1'; \n        break; \n      case 'Fée': \n        color = 'pink lighten-4'; \n        break; \n      case 'Psy': \n        color = 'deep-purple darken-2'; \n        break; \n      case 'Electrik': \n        color = 'lime accent-1'; \n        break; \n      case 'Combat': \n        color = 'deep-orange'; \n        break; \n      default: \n        color = 'grey'; \n        break; \n    }\n   \n    return `chip ${color}`;\n  }\n\n  export default formatType","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css'\nimport formatType from '../helpers/format-type';\nimport { useNavigate } from 'react-router-dom';\n  \ntype Props = {\n  pokemon: Pokemon,\n  borderColor?: string\n};\n  \nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\n   \n  const [color, setColor] = useState<string>();\n  const navigate = useNavigate();\n   \n   const showBorder = () => {\n    setColor(borderColor)\n   }\n\n   const hideBorder = () => {\n    setColor('#f5f5f5') // Bordure de nouveau en grise\n   }\n\n   const goToPokemon = (id: number) => {\n    navigate(`/pokemons/${id}`);\n   }\n\n\n  return (\n    <div className=\"card-pokemon\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n      <div className=\"card-horizontal\" style={{ borderColor: color }}>\n        <div className=\"card-image\"> \n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content-pokemon\">\n            <p>{pokemon.name}</p>\n            {pokemon.types.map(type => (\n              <span key={type} className={formatType(type)}>{type}</span>\n            ))}\n          </div>\n        </div>\n      </div> \n    </div>\n  );\n}\n  \n\n\nexport default PokemonCard","import Pokemon from './pokemon';\n   \nexport const POKEMONS: Pokemon[] = [\n {\n  id: 1,\n  name: \"Bulbizarre\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n  \nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n\nexport default class PokemonService {\n\n  static pokemons:Pokemon[] = POKEMONS;\n\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n\n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n\n  static getPokemon(id: number): Promise<Pokemon|undefined> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n      .then(response => response.json())\n      .then(data => this.isEmpty(data) ? null : data)\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\n    }); \n  }\n\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    delete pokemon.created;\n\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n\n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n\n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n\n  }\n\n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport './pokemon-search.css'\n\n \nconst PokemonSearch: FunctionComponent = () => {\n  \n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n \n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n \n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n  \n  return (\n    <div className=\"search-pokemons\"> \n      <div className=\"card-content-pokemons\"> \n        <div className=\"search-text\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n  );\n}\n  \nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service' \nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\nimport './pokemon-list.css'\n\nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  \n  useEffect(() => {\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons))\n  }, []);\n  \n  return (\n    <div className='list-pokemons'>\n       <PokemonSearch/>\n          <div className=\"list-card\">  \n        {pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.id} pokemon={pokemon} />\n        ))}\n        </div>\n        <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\n         style={{position: 'fixed' , bottom: '25px' , right: '25px'}} to=\"/pokemon/post\"><i className=\"fa fa-plus\"></i></Link>\n      </div>\n  );\n}\n  \nexport default PokemonList;","const formatDate = (date: Date = new Date()): string => {\n    return `${date.getDate()}/${date.getMonth()+ 1}/${date.getFullYear()}`\n}\nexport default formatDate","import React, { FunctionComponent } from 'react';\n  \nconst Loader: FunctionComponent = () => {\n   \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n   \nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loard';\nimport './pokemon-detail.css'\n\nconst PokemonsDetail: FunctionComponent = () => {\n  const {id} = useParams() // cet id est reçu sous forme d'une chaîne de caractères.\n  const [pokemon, setPokemon] = useState<Pokemon|undefined>();\n\n  useEffect(() => {\n    PokemonService.getPokemon(Number(id)).then(pokemon => setPokemon(pokemon || undefined));\n  }, [id]);\n\n  return (\n    <div className=\"content-details\">\n      { pokemon ? (\n        <div className=\"details-content-pokemon\">\n          <div className=\"details-pokemon\">\n            <h2 className=\"details-center-header\">{pokemon.name}</h2>\n            <Link to={`/pokemon/edit/${pokemon.id}`} className='button-card'>\n              <i className=\"fa-solid fa-pen\"></i>\n            </Link>\n\n            <div className=\"details-card-hover\">\n              <div className=\"card-image\">\n                {pokemon && pokemon.picture !== null && pokemon.picture !== undefined\n                  ? <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                  : <span className=\"missing-image-text\">{pokemon.name}</span>}\n              </div>\n              <div className=\"details-card-pokemon\">\n                <div className=\"card-content-pokemon\">\n                  <table className=\"card-border\">\n                    <tbody>\n                      <tr>\n                        <td>Nom</td>\n                        <td><strong>{pokemon.name}</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Points de vie</td>\n                        <td><strong>{pokemon.hp}</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Dégâts</td>\n                        <td><strong>{pokemon.cp}</strong></td>\n                      </tr>\n                      <tr>\n                        <td>Types</td>\n                        <td>\n                          {pokemon.types.map(type => (\n                            <span key={type} className={formatType(type)}>{type}</span>\n                          ))}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>Date de création</td>\n                        <td>{formatDate(pokemon.created)}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n\nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n  \nconst PageNotFound: FunctionComponent = () => {\n  \n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n  \nexport default PageNotFound;","import React, { FunctionComponent, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport './pokemon-form.css'\n \n\ntype Props = { \n  pokemon: Pokemon,\n  isEditForm: boolean;\n};\n\ntype Field = {\n    value?: any,\n    error?: string,\n    isValid?: boolean;\n}\n\ntype Form = {\n    picture: Field,\n    name: Field,\n    hp: Field,\n    cp: Field,\n    types: Field\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n  \n    const navigate = useNavigate();\n\n    const [form, setForm] = useState<Form>({\n        picture: { value: pokemon.picture, isValid:true },\n        name: { value: pokemon.name, isValid: true },\n        hp: { value: pokemon.hp, isValid: true },\n        cp: { value: pokemon.cp, isValid: true },\n        types: { value: pokemon.types, isValid: true }\n    });\n\n\n    const types: string[] = [\n        'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n        'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n    ];\n\n\n    const hasType = (type: string): boolean =>{\n    return form.types.value.includes(type);\n    }\n\n    const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked;\n    let newField: Field;\n\n    if(checked) {\n      // Si l'utilisateur coche un type, on l'ajoute à la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n    }\n\n    setForm({...form, ...{ types: newField }});\n  }\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue} };\n\n    setForm({...form, ...newField});\n}\n\n\nconst validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator url\n    if(isAddForm()) {\n\n        const start = \" \";\n        const end = \".png\";\n  \n        if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n          const errorMsg: string = 'L\\'url n\\'est pas valide.';\n          const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n          newForm = { ...newForm, ...{ picture: newField } };\n        } else {\n          const newField: Field = { value: form.picture.value, error: '', isValid: true };\n          newForm = { ...newForm, ...{ picture: newField } };\n        }\n      }\n    \n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  }\n\n\n \n  const isTypesValid = (type: string): boolean => {\n    if(form.types.value.length === 1 && hasType(type)) {\n       return false;  \n    }\n   \n    if(form.types.value.length >= 3 && !hasType(type)){\n        return false;\n    }\n    return true;\n  }\n\n \n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n   const isFormValid = validateForm();\n\n   if(isFormValid){\n    pokemon.name = form.name.value;\n    pokemon.hp = form.hp.value;\n    pokemon.cp = form.cp.value;\n    pokemon.types = form.types.value;\n    pokemon.picture = form.picture.value;\n    isEditForm ? updatePokemon() : addPokemon();\n    navigate ('/')\n  }\n  }\n \n  const addPokemon = async () => {\n    const newPokemon = await PokemonService.addPokemon(pokemon);\n    return newPokemon;\n  }\n\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => navigate(`/pokemons/${pokemon.id}`))\n}\n\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => navigate(`/pokemons`))\n  }\n\n  const isAddForm = (): boolean => {\n    return !isEditForm;\n  }\n\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}> \n      <div className=\"content-add\">\n       <div className=\"card-hover\"> \n            <div className=\"card-stacked\">\n              <div className=\"card-add-content\">\n              {isEditForm && (\n             <div className=\"card-image\">\n             <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n             <span className=\"button-card\">  \n             <i onClick={deletePokemon} className=\"fa-solid fa-trash\"></i>\n             </span>\n           </div>\n            )}\n                {/* Pokemon picture */}\n                {isAddForm() &&(\n                     <div className=\"form-group\">\n                  <label htmlFor=\"name\">Image</label>\n                  <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                {form.picture.error &&\n                <div className=\"card-pannel red accent-1\">\n                    {form.picture.error}\n                </div>\n                }\n                </div> \n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                {form.name.error &&\n                <div className=\"card-pannel red accent-1\">\n                    {form.name.error}\n                </div>\n                }\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.hp.error &&\n                <div className=\"card-pannel red accent-1\">\n                    {form.hp.error}\n                </div>\n                }\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {form.cp.error &&\n                <div className=\"card-pannel red accent-1\">\n                    {form.cp.error}\n                </div>\n                }\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value= {type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div> \n                <div className=\"card-action\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn-valid\">Valider</button>\n              </div>\n              </div>\n             \n            </div>\n          </div>\n        </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loard';\n \nconst PokemonEdit: FunctionComponent = () => {\n  const {id} = useParams() // cet id est reçu sous forme d'une chaîne de caractères.\n  const [pokemon, setPokemon] = useState<Pokemon|undefined>();\n      \n  useEffect(() => {\n      PokemonService.getPokemon(Number(id)).then(pokemon => setPokemon(pokemon || undefined));\n      }, [id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"content-header-edit\">\n            <h2 className=\"details-center-header\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader/></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","export default class Pokemon {\n    id: number;\n    hp: number;\n    cp: number;\n    name: string;\n    picture: string;\n    types: Array<string>;\n    created: Date;\n    \n    constructor(\n     id: number,\n     hp: number = 100,\n     cp: number = 10,\n     name: string = '...',\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\n     types: Array<string> = ['Normal'],\n     created: Date = new Date()\n    ) {\n     this.id = id;\n     this.hp = hp;\n     this.cp = cp;\n     this.name = name;\n     this.picture = picture;\n     this.types = types;\n     this.created = created;\n    }\n   }","import React, { FunctionComponent, useState } from 'react';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-add.css'\n\n\nconst PokemonAdd: FunctionComponent = () => {\n    const [id] = useState<number>(new Date().getTime());\n    const [pokemon] = useState<Pokemon>(new Pokemon(id));\n\n    return (\n        <div className='content-header'>\n            <h2 className='header-center'>Ajouter un pokémon</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n        </div>\n    )\n}\n\nexport default PokemonAdd;","export default class AuthenticationService {\n\n    static isAuthenticated:boolean = false;\n  \n    static login(username: string, password: string): Promise<boolean> {\n      const isAuthenticated = (username === 'Pokemon' && password === 'Pokedex');\n  \n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.isAuthenticated = isAuthenticated;\n          resolve(isAuthenticated);\n        }, 1000);\n      });\n    }\n  }","import React, { FunctionComponent, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\nimport './login.css'\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const navigate = useNavigate();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (Pokemon / Pokedex)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        navigate('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n        <div className=\"log-css\">\n          <div className=\"log-card\">\n            <div className=\"card-stacked\">\n              \n                {/* Form message */}\n                {message && \n                  <div className=\"log-co\">\n                    {message}\n                  </div>\n                }\n                {/* Field username */}\n                <div className=\"card-content\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"log-error\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"log-error\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              \n              <div className=\"form-group\">\n                {/* Submit button */}\n                <input type=\"submit\" className='log-button' value=\"Connexion\" />\n              </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n\nconst PrivateRoute= ({ redirectPath = '/login' }) => {\n  if (!AuthenticationService.isAuthenticated) {\n    return <Navigate to={redirectPath} replace />;\n  }\n  return <Outlet />;\n};\n\nexport default PrivateRoute;","export default __webpack_public_path__ + \"static/media/Pokedex-logo-app.a41a885a.png\";","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css';\nimport LogoApp from '../images/Pokedex-logo-app.png';\n\nconst Header: FunctionComponent = () => {\n  return (\n    <div className=\"header-css\">\n      <div className=\"header-css-list\">\n        <a href=\"https://www.linkedin.com/in/niademe-gencin/\" target=\"_blank\" rel=\"noreferrer\"><i className=\"fa-brands fa-linkedin-in\"></i></a>\n        <a href=\"https://github.com/ngencin\" target=\"_blank\" rel=\"noreferrer\"><i className=\"fa-brands fa-github\"></i></a>\n        <a href=\"https://www.codonsuncitron.dev\" target=\"_blank\" rel=\"noreferrer\"><i className=\"fa-regular fa-lemon\"></i></a>\n      </div>\n      <div className=\"header-css-pokedex\">\n        <Link to=\"/\" className=\"\"><img src={LogoApp} alt=\"Pokedex Logo\"></img></Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/logoniadmegencingroovy.3af3c5ca.png\";","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport './footer.css';\nimport LogoAppFooter from '../images/logoniadmegencingroovy.png';\n\nconst Footer: FunctionComponent = () => {\n  return (\n    \n      <div className=\"footer-css\">\n        <Link to=\"https://www.codonsuncitron.dev\" className=\"brand-logo center\"><img src={LogoAppFooter} alt=\"Niademe Logo\"></img></Link>\n        <p>© 2024 DÉVELOPPEUSE WEB DE CITRON 🍋</p>\n      </div>\n    \n  );\n};\n\nexport default Footer;","import React, { FunctionComponent } from 'react';\nimport PokemonList from './pages/pokemon-list';\nimport PokemonDetail from './pages/pokemon-detail';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PokemonPost from './pages/pokemon-add';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\nimport Header from './pages/header';\nimport Footer from './pages/footer';\n\n\nconst App: FunctionComponent = () => {\n\n\n return (\n  <Router>\n    <div>\n      {/*La barre de navigation commun à toutes les pages*/}\n      <Header/>\n      {/*Le système de gestion des routes de notre applicaton*/}\n      <Routes>\n       \n        <Route path =\"/login\" element={<Login />} />\n        <Route element={<PrivateRoute/>} > \n        <Route  path=\"/\" element={<PokemonList />} />\n        <Route  path=\"/pokemons\" element={<PokemonList />} />\n        <Route  path=\"/pokemon/post\" element={<PokemonPost />} />\n        <Route  path=\"/pokemon/edit/:id\" element={<PokemonEdit />} />\n        <Route path=\"/pokemons/:id\" element={<PokemonDetail/>} />\n        </Route>\n        <Route element={<PageNotFound />} />\n      </Routes>\n      <Footer />\n    </div>\n  </Router>\n  \n )\n}\n  \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './app';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}